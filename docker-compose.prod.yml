version: '3.8'

services:
  web:
    build:
      context: ./django_app
      dockerfile: Dockerfile.prod
    restart: always  
    command: sh -c "python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn django_project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - pg_db

  pg_db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db


  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: npm
    restart: always
    ports:
      - "200:80"
      - "81:81"   # NPM UI access
      - "443:443"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
  # nginx-proxy:
  #   container_name: nginx-proxy
  #   build: nginx
  #   restart: always
  #   ports:
  #     - 443:443
  #     - 200:80
  #   volumes:
  #     - static_volume:/home/app/web/staticfiles
  #     - media_volume:/home/app/web/mediafiles
  #     - certs:/etc/nginx/certs
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   depends_on:
  #     - web

  # acme-companion:
  #   image: nginxproxy/acme-companion
  #   restart: always
  #   env_file:
  #     - ./.env.prod.proxy-companion
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - certs:/etc/nginx/certs
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy

  nextcloud_db:
    image: mariadb:10.11
    container_name: nextcloud_db
    restart: unless-stopped
    env_file:
      - ./.env.prod.nextcloud
    volumes:
      - /mnt/nextcloud_data/data:/var/lib/mysql

  nextcloud_redis:
    image: redis:7
    container_name: nextcloud_redis
    restart: unless-stopped

  nextcloud_app:
    image: nextcloud
    container_name: nextcloud_app
    restart: unless-stopped
    environment:
      - PHP_UPLOAD_MAX_FILESIZE=10G
      - PHP_POST_MAX_SIZE=10G
    env_file:
      - ./.env.prod.redis
    volumes:
      - /mnt/nextcloud_data/app:/var/www/html
    networks:
      - default
    depends_on:
      - nextcloud_db
      - nextcloud_redis

  # telegram_bot:
  #   build: ./telegram_bot
  #   restart: always
  #   depends_on:
  #     - web
  #   env_file:
  #     - ./.env.prod

  # pihole:
  #   image: pihole/pihole
  #   container_name: pihole
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "100:80/tcp"
  #   environment:
  #     - TZ=Asia/Kolkata
  #     - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
  #     - ServerIP=192.168.0.200
  #   volumes:
  #     - pihole_etc_pihole:/etc/pihole
  #     - pihole_etc_dnsmasq:/etc/dnsmasq.d
  #   restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
  npm_data:
  npm_letsencrypt:
  # pihole_etc_pihole:
  # pihole_etc_dnsmasq:
